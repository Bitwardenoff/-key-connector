---
name: Build

on: push

jobs:
  cloc:
    name: CLOC
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Install cloc
        run: sudo apt update && sudo apt install cloc -y

      - name: Print lines of code
        run: |
          cloc --include-lang \
          C#,SQL,Razor,"Bourne Shell",PowerShell,HTML,CSS,Sass,JavaScript,TypeScript \
          --vcs git

  build-artifacts:
    name: Build artifacts
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Print environment
        run: |
          whoami
          dotnet --info
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"

      - name: Restore/Clean service
        working-directory: ./src/KeyConnector
        run: |
          echo "Restore"
          dotnet restore
          echo "Clean"
          dotnet clean -c "Release" -o obj/build-output/publish

      - name: Publish service
        working-directory: ./src/KeyConnector
        run: |
          echo "Publish"
          dotnet publish -c "Release" -o obj/build-output/publish
          cd obj/build-output/publish
          zip -r KeyConnector.zip .
          mv KeyConnector.zip ../../../
          pwd
          ls -atlh ../../../

      - name: Upload service artifact
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: KeyConnector.zip
          path: ./src/KeyConnector/KeyConnector.zip
          if-no-files-found: error

  build-docker:
    name: Build Docker images
    runs-on: ubuntu-20.04
    needs: build-artifacts
    steps:
      - name: Checkout repo
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      # - name: Login to Azure - Prod Subscription
      #   uses: Azure/login@66d2e78565ab7af265d2b627085bc34c73ce6abb
      #   with:
      #     creds: ${{ secrets.AZURE_PROD_KV_CREDENTIALS }}

      # - name: Retrieve secrets
      #   id: retrieve-secrets
      #   uses: Azure/get-keyvault-secrets@b5c723b9ac7870c022b8c35befe620b7009b336f
      #   with:
      #     keyvault: "bitwarden-prod-kv"
      #     secrets: "docker-password,
      #       docker-username,
      #       dct-delegate-2-repo-passphrase,
      #       dct-delegate-2-key"

      # - name: Log into Docker
      #   if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/hotfix'
      #   env:
      #     DOCKER_USERNAME: ${{ steps.retrieve-secrets.outputs.docker-username }}
      #     DOCKER_PASSWORD: ${{ steps.retrieve-secrets.outputs.docker-password }}
      #   run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      # - name: Setup Docker Trust
      #   if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/hotfix'
      #   env:
      #     DCT_DELEGATION_KEY_ID: "c9bde8ec820701516491e5e03d3a6354e7bd66d05fa3df2b0062f68b116dc59c"
      #     DCT_DELEGATE_KEY: ${{ steps.retrieve-secrets.outputs.dct-delegate-2-key }}
      #   run: |
      #     mkdir -p ~/.docker/trust/private
      #     echo "$DCT_DELEGATE_KEY" > ~/.docker/trust/private/$DCT_DELEGATION_KEY_ID.key
      # - name: Setup service name
      #   id: setup
      #   run: |
      #     SERVICE_NAME=$(echo "KeyConnector" | awk '{print tolower($0)}')
      #     echo "SERVICE_NAME: $SERVICE_NAME"
      #     echo "::set-output name=service_name::$SERVICE_NAME"

      - name: Get build artifact
        uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60 # v2.0.10
        with:
          name: KeyConnector.zip

      - name: Setup build artifact
        run: |
          mkdir -p ./src/KeyConnector/obj/build-output/publish
          unzip KeyConnector.zip \
            -d ./src/KeyConnector/obj/build-output/publish
      - name: Build Docker images
        run: |
          docker build -t ${{ steps.setup.outputs.service_name }} \
            ./src/KeyConnector
      # - name: Docker Trust setup
      #   if: |
      #     github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/hotfix')
      #   env:
      #     DCT_REPO_PASSPHRASE: ${{ steps.retrieve-secrets.outputs.dct-delegate-2-repo-passphrase }}
      #   run: |
      #     echo "DOCKER_CONTENT_TRUST=1" >> $GITHUB_ENV
      #     echo "DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=$DCT_REPO_PASSPHRASE" >> $GITHUB_ENV
      # - name: Tag and Push RC to Docker Hub
      #   if: (github.ref == 'refs/heads/rc')
      #   run: |
      #     docker tag ${{ steps.setup.outputs.service_name }} \
      #       bitwarden/${{ steps.setup.outputs.service_name }}:rc
      #     docker push bitwarden/${{ steps.setup.outputs.service_name }}:rc
      # - name: Tag and Push Hotfix to Docker Hub
      #   if: (github.ref == 'refs/heads/hotfix')
      #   run: |
      #     docker tag ${{ steps.setup.outputs.service_name }} \
      #       bitwarden/${{ steps.setup.outputs.service_name }}:hotfix
      #     docker push bitwarden/${{ steps.setup.outputs.service_name }}:hotfix
      # - name: Tag and Push Dev to Docker Hub
      #   if: (github.ref == 'refs/heads/master')
      #   run: |
      #     docker tag ${{ steps.setup.outputs.service_name }} \
      #       bitwarden/${{ steps.setup.outputs.service_name }}:dev
      #     docker push bitwarden/${{ steps.setup.outputs.service_name }}:dev
      # - name: Log out of Docker and disable Docker Notary
      #   if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/hotfix'
      #   run: |
      #     docker logout
      #     echo "DOCKER_CONTENT_TRUST=0" >> $GITHUB_ENV
      # - name: Login to Azure - QA Subscription
      #   uses: Azure/login@77f1b2e3fb80c0e8645114159d17008b8a2e475a
      #   with:
      #     creds: ${{ secrets.AZURE_QA_KV_CREDENTIALS }}

      # - name: Login to Azure ACR
      #   run: az acr login -n bitwardenqa

      # - name: Tag and Push RC to Azure ACR QA registry
      #   if: github.ref == 'refs/heads/rc'
      #   env:
      #     REGISTRY: bitwardenqa.azurecr.io
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker tag ${{ steps.setup.outputs.service_name }} \
      #       $REGISTRY/${{ steps.setup.outputs.service_name }}:rc-${IMAGE_TAG:(-8)}
      #     docker push $REGISTRY/${{ steps.setup.outputs.service_name }}:rc-${IMAGE_TAG:(-8)}
      # - name: Tag and Push Hotfix to Azure ACR QA registry
      #   if: github.ref == 'refs/heads/hotfix'
      #   env:
      #     REGISTRY: bitwardenqa.azurecr.io
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker tag ${{ steps.setup.outputs.service_name }} \
      #       $REGISTRY/${{ steps.setup.outputs.service_name }}:hotfix-${IMAGE_TAG:(-8)}
      #     docker push $REGISTRY/${{ steps.setup.outputs.service_name }}:hotfix-${IMAGE_TAG:(-8)}
      # - name: Tag and Push Dev to Azure ACR QA registry
      #   if: github.ref == 'refs/heads/master'
      #   env:
      #     REGISTRY: bitwardenqa.azurecr.io
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker tag ${{ steps.setup.outputs.service_name }} \
      #       $REGISTRY/${{ steps.setup.outputs.service_name }}:dev-${IMAGE_TAG:(-8)}
      #     docker push $REGISTRY/${{ steps.setup.outputs.service_name }}:dev-${IMAGE_TAG:(-8)}
