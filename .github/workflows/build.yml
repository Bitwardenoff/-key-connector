---
name: Build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - rc
      - hotfix-rc
  workflow_dispatch:

env:
  _AZ_REGISTRY: "bitwardenprod.azurecr.io"

jobs:
  cloc:
    name: CLOC
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install cloc
        run: sudo apt update && sudo apt install cloc -y

      - name: Print lines of code
        run: |
          cloc --include-lang \
          C#,SQL,Razor,"Bourne Shell",PowerShell,HTML,CSS,Sass,JavaScript,TypeScript \
          --vcs git


  build-artifacts:
    name: Build artifacts
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Print environment
        run: |
          whoami
          dotnet --info
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"

      - name: Restore/Clean service
        working-directory: ./src/KeyConnector
        run: |
          echo "Restore"
          dotnet restore
          echo "Clean"
          dotnet clean -c "Release" -o obj/build-output/publish

      - name: Publish service
        working-directory: ./src/KeyConnector
        run: |
          echo "Publish"
          dotnet publish -c "Release" -o obj/build-output/publish
          cd obj/build-output/publish
          zip -r KeyConnector.zip .
          mv KeyConnector.zip ../../../
          pwd
          ls -atlh ../../../

      - name: Upload service artifact
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: KeyConnector.zip
          path: ./src/KeyConnector/KeyConnector.zip
          if-no-files-found: error


  build-docker:
    name: Build Docker images
    runs-on: ubuntu-22.04
    needs: build-artifacts
    env:
      _SERVICE_NAME: key-connector
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Check Branch to Publish
        env:
          PUBLISH_BRANCHES: "master,rc,hotfix-rc"
        id: publish-branch-check
        run: |
          IFS="," read -a publish_branches <<< $PUBLISH_BRANCHES

          if [[ " ${publish_branches[*]} " =~ " ${GITHUB_REF:11} " ]]; then
            echo "is_publish_branch=true" >> $GITHUB_ENV
          else
            echo "is_publish_branch=false" >> $GITHUB_ENV
          fi

      ########## ACRs ##########
      - name: Login to Azure - PROD Subscription
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_PROD_KV_CREDENTIALS }}

      - name: Login to PROD ACR
        run: az acr login -n bitwardenprod

      - name: Login to Azure - CI Subscription
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve github PAT secrets
        id: retrieve-secret-pat
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "github-pat-bitwarden-devops-bot-repo-scope"

      ########## Generate image tag and build Docker image ##########
      - name: Generate Docker image tag
        id: tag
        run: |
          IMAGE_TAG=$(echo "${GITHUB_REF:11}" | sed "s#/#-#g")  # slash safe branch name
          if [[ "$IMAGE_TAG" == "master" ]]; then
            IMAGE_TAG=dev
          fi
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Generate image full name
        id: image-name
        env:
          IMAGE_TAG: ${{ steps.tag.outputs.image_tag }}
          PROJECT_NAME: ${{ env._SERVICE_NAME}}
        run: | echo "name=${PROJECT_NAME}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Get build artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: KeyConnector.zip

      - name: Setup build artifact
        run: |
          mkdir -p ./src/KeyConnector/obj/build-output/publish
          unzip KeyConnector.zip \
            -d ./src/KeyConnector/obj/build-output/publish

      - name: Build Docker images
        env:
          IMAGE_NAME: ${{ steps.image-name.outputs.name }}
        run: |
          docker build -t ${{ env.IMAGE_NAME }} \
            ./src/KeyConnector

      - name: Tag & Push to ACR
        if: ${{ env.is_publish_branch }}
        env:
          IMAGE_NAME: ${{ steps.image-name.outputs.name }}
        run: |
          docker tag ${{ env.IMAGE_NAME }} \
            ${{ env._AZURE_REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env._AZURE_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Setup DCT
        id: setup-dct
        if: ${{ env.is_publish_branch }}
        uses: bitwarden/gh-actions/setup-docker-trust@main
        with:
          azure-creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}
          azure-keyvault-name: "bitwarden-ci"

      - name: Tag & Push to Docker Hub
        if: ${{ env.is_publish_branch }}
        env:
          DOCKER_CONTENT_TRUST: 1
          DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ steps.setup-dct.outputs.dct-delegate-repo-passphrase }}
          IMAGE_NAME: ${{ steps.image-name.outputs.name }}
        run: |
          docker tag ${{ env.IMAGE_NAME }} \
            bitwarden/${{ env.IMAGE_NAME }}
          docker push bitwarden/${{ env.IMAGE_NAME }}

